name: Deploy Backend to DigitalOcean

on:
  push:
    branches:
      - main
    paths:
      - 'server/**'
      - '.github/workflows/deploy-to-digitalocean.yml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Copy files to DigitalOcean
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_KEY }}
          source: "server/"
          target: "~/backend-app"

      - name: Setup and Deploy Backend on DigitalOcean
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_KEY }}
          script: |
            # Update system packages
            sudo apt-get update

            # Install Node.js & npm if not present
            if ! command -v node >/dev/null 2>&1; then
              curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi

            # Install PM2 globally if not present
            if ! command -v pm2 >/dev/null 2>&1; then
              sudo npm install -g pm2
            fi

            # Install Nginx if not present
            if ! command -v nginx >/dev/null 2>&1; then
              sudo apt-get install -y nginx
            fi

            # Install Certbot if not present
            if ! command -v certbot >/dev/null 2>&1; then
              sudo apt-get install -y certbot python3-certbot-nginx
            fi

            # Go to backend app directory
            cd ~/backend-app

            # Write environment variables
            cat > .env <<EOL
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            PORT=${{ secrets.PORT }}
            SMTP_HOST=${{ secrets.SMTP_HOST }}
            SMTP_PORT=${{ secrets.SMTP_PORT }}
            SMTP_USER=${{ secrets.SMTP_USER }}
            SMTP_PASS=${{ secrets.SMTP_PASS }}
            MAIL_FROM=${{ secrets.MAIL_FROM }}
            S3_REGION=${{ secrets.S3_REGION }}
            S3_BUCKET=${{ secrets.S3_BUCKET }}
            S3_ACCESS_KEY_ID=${{ secrets.S3_ACCESS_KEY_ID }}
            S3_SECRET_ACCESS_KEY=${{ secrets.S3_SECRET_ACCESS_KEY }}
            S3_PUBLIC_BASE=${{ secrets.S3_PUBLIC_BASE }}
            EOL

            # Install dependencies
            npm install --production

            # Run Prisma migrations
            npx prisma migrate deploy

            # Configure Nginx for backend API
            sudo tee /etc/nginx/sites-available/api.bengalcodingacademy.com <<EOL
            server {
                listen 80;
                server_name api.bengalcodingacademy.com;

                # Security headers
                add_header X-Frame-Options "SAMEORIGIN" always;
                add_header X-XSS-Protection "1; mode=block" always;
                add_header X-Content-Type-Options "nosniff" always;
                add_header Referrer-Policy "no-referrer-when-downgrade" always;
                add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

                # Proxy to Node.js app
                location / {
                    proxy_pass http://localhost:${{ secrets.PORT }};
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade \$http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto \$scheme;
                    proxy_cache_bypass \$http_upgrade;
                }

                # Handle WebSocket connections
                location /socket.io/ {
                    proxy_pass http://localhost:${{ secrets.PORT }};
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade \$http_upgrade;
                    proxy_set_header Connection "upgrade";
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto \$scheme;
                }
            }
            EOL

            # Enable the site
            sudo ln -sf /etc/nginx/sites-available/api.bengalcodingacademy.com /etc/nginx/sites-enabled/
            sudo rm -f /etc/nginx/sites-enabled/default

            # Test Nginx configuration
            sudo nginx -t

            # Start/restart Nginx
            sudo systemctl restart nginx
            sudo systemctl enable nginx

            # Wait a moment for Nginx to start
            sleep 5

            # Obtain SSL certificate with Certbot
            sudo certbot --nginx -d api.bengalcodingacademy.com --non-interactive --agree-tos --email ${{ secrets.EMAIL }} --redirect

            # Restart server with PM2
            pm2 stop backend-api || true
            pm2 start src/index.js --name backend-api
            pm2 save

            # Setup automatic certificate renewal
            echo "0 12 * * * /usr/bin/certbot renew --quiet" | sudo crontab -

            # Show status
            echo "=== Backend Deployment Status ==="
            pm2 status
            sudo systemctl status nginx --no-pager
            echo "=== Backend API is now available at ==="
            echo "HTTPS: https://api.bengalcodingacademy.com/api/health"
            echo "HTTP: http://api.bengalcodingacademy.com/api/health (redirects to HTTPS)"
            echo "Direct: http://${{ secrets.DO_HOST }}:${{ secrets.PORT }}/api/health"
            echo "=== Complete Setup ==="
            echo "🌐 Web Frontend: https://bengalcodingacademy.com (DigitalOcean)"
            echo "🔧 Admin Frontend: https://admin.bengalcodingacademy.com (DigitalOcean)"
            echo "⚡ Backend API: https://api.bengalcodingacademy.com (DigitalOcean)"
            echo "=== SSL Certificate Status ==="
            sudo certbot certificates

      - name: Cleanup
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_KEY }}
          script: |
            rm -rf ~/backend-app
